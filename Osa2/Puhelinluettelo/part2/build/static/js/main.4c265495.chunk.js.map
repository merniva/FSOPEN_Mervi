{"version":3,"sources":["services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","changedPerson","put","delete","Notification","msg","className","Error","Filter","searchName","handleFilterChange","value","onChange","type","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","PhoneBookList","persons","handleDeleteClick","filter","name","toLowerCase","includes","map","person","key","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setSearchName","notification","setNotification","error","setError","useEffect","personService","event","target","preventDefault","nameInfo","nameChecker","find","window","confirm","returnedPerson","setTimeout","catch","console","log","personResult","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c265495.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, changedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, changedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAllPersons,\r\n  createPerson, \r\n  updatePerson,\r\n  deletePerson\r\n}","import React from \"react\";\r\n\r\nconst Notification = ({ msg }) => {\r\n    if (msg === null) {\r\n      return null;\r\n    }\r\n    return <div className=\"notificationMsg\">{msg}</div>;\r\n  };\r\n\r\nexport default Notification;","import React from \"react\";\r\n\r\nconst Error = ({ msg }) => {\r\n    if (msg === null) {\r\n      return null;\r\n    }\r\n    return <div className=\"errorMsg\">{msg}</div>;\r\n  };\r\n\r\nexport default Error;","import React, { useState, useEffect } from \"react\";\r\nimport personService from \"./services/persons\";\r\nimport \"./App.css\";\r\nimport Notification from \"./components/Notification\";\r\nimport Error from \"./components/Error\";\r\n\r\nconst Filter = ({ searchName, handleFilterChange }) => (\r\n  <>\r\n    <div>\r\n      <div>\r\n        <input value={searchName} onChange={handleFilterChange} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">Rajaa</button>\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst PersonForm = ({\r\n  addName,\r\n  newName,\r\n  newNumber,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n}) => (\r\n  <form onSubmit={addName}>\r\n    <div>\r\n      <div>\r\n        Nimi: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        Numero: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">Lisää</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nconst PhoneBookList = ({ persons, searchName, handleDeleteClick }) => (\r\n  <>\r\n    {persons\r\n      .filter(\r\n        ({ name }) =>\r\n          name && name.toLowerCase().includes(searchName.toLowerCase())\r\n      )\r\n      .map((person) => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}{\" \"}\r\n          <button onClick={() => handleDeleteClick(person)} value={person.id}>\r\n            Poista\r\n          </button>\r\n        </p>\r\n      ))}\r\n  </>\r\n);\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAllPersons().then((persons) => {\r\n      setPersons(persons);\r\n    });\r\n  }, []);\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    const nameInfo = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    const nameChecker = persons.find(({ name }) => name === nameInfo.name);\r\n    if (!nameChecker) {\r\n      personService.createPerson(nameInfo).then((personResult) => {\r\n        setPersons(persons.concat(personResult));\r\n        setNotification(`${personResult.name} lisätty luetteloon!`);\r\n        setTimeout(() => {\r\n          setNotification(null);\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data);\r\n        setError(error.response.data.error);\r\n            setTimeout(() => {\r\n              setError(null);\r\n            }, 5000);\r\n      })\r\n    } else {\r\n      const selection = window.confirm(\r\n        `${newName} on jo lisätty luetteloon, haluatko päivittää numeron?`\r\n      );\r\n      if (selection) {\r\n        personService\r\n          .updatePerson(nameChecker.id, nameInfo)\r\n          .then((returnedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== returnedPerson.id ? person : returnedPerson\r\n              )\r\n            );\r\n            setNotification(`Henkilön ${returnedPerson.name} tiedot muutettu!`);\r\n            setTimeout(() => {\r\n              setNotification(null);\r\n            }, 5000);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setError(`Henkilö '${newName}' on jo poistettu tietokannasta!`);\r\n            setTimeout(() => {\r\n              setError(null);\r\n            }, 5000);\r\n          });\r\n      }\r\n    }\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const handleDeleteClick = (person) => {\r\n    const { name, id } = person;\r\n    if (window.confirm(`Haluatko varmasti poistaa henkilön ${name}?`)) {\r\n      personService\r\n        .deletePerson(id)\r\n        .then(() =>\r\n          personService.getAllPersons().then((persons) => {\r\n            setPersons(persons);\r\n            setNotification(`${person.name} poistettu tietokannasta!`);\r\n            setTimeout(() => {\r\n              setNotification(null);\r\n            }, 5000);\r\n          })\r\n        )\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setError(`Henkilö ${name} on jo poistettu tietokannasta!`);\r\n          setTimeout(() => {\r\n            setError(null);\r\n          }, 5000);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n      <Notification msg={notification} />\r\n      <Error msg={error} />\r\n      <h3>Etsi nimellä</h3>\r\n      <Filter searchName={searchName} handleFilterChange={handleFilterChange} />\r\n      <h3>Lisää uusi numero</h3>\r\n      <PersonForm\r\n        addName={addName}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h3>Numerot</h3>\r\n      <PhoneBookList\r\n        persons={persons}\r\n        searchName={searchName}\r\n        handleDeleteClick={handleDeleteClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}